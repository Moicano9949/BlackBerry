import base64
import os
from colores import *
import pyfiglet

def obfuscate_python(program, key):
    obfuscated_program = "".join(chr(ord(c) ^ key) for c in program)                            
    encoded = base64.b64encode(obfuscated_program.encode()).decode()                            
    
    # Nombre de variable corregido y mantenido constante
    var_name = "__THC__DELTA9__THC__DELTA9__THC__DELTA9__THC__DELTA9__THC__DELTA9__THC__DELTA9__"
    obfuscated_code = f'{var_name} = ""\n'
    
    for i in range(0, len(encoded), 10):
        chunk = encoded[i:i+10]
        hex_chunk = ''.join(['\\x{:02x}'.format(ord(c)) for c in chunk])
        obfuscated_code += f'{var_name} += "{hex_chunk}"\n'

    obfuscated_code += f'exec("".join(chr(ord(c) ^ {key}) for c in __import__("base64").b64decode({var_name}).decode()))'
    return obfuscated_code


def main():
    try:
        banner = pyfiglet.figlet_format("PyOfuscoder", font="slant")
        print(banner)

        python_code = input(f"{b_green}Introduce código Python3 a ofuscar (dejar en blanco si es un archivo): {reset}")
        if not python_code:
            program_path = input(f"{b_green}Introduce el nombre de tu programa Python: {reset}")
            while not os.path.exists(program_path):
                print(f"{b_red}Ruta inválida. Por favor, intenta de nuevo.{reset}")
                program_path = input(f"{b_green}Introduce el nombre de tu programa Python3: {reset}")
            with open(program_path, 'r') as file:
                python_code = file.read()

        obfuscated_program_name = input(f"{b_green}Introduce un nombre para el archivo ofuscado (Por defecto: obfuscate.py): {reset}")
        if not obfuscated_program_name:
            obfuscated_program_name = "obfuscate.py"

        key = 0x7F

        obfuscated_code = obfuscate_python(python_code, key)

        with open(obfuscated_program_name, 'w') as file:
            file.write(obfuscated_code)

        print(f"{start} {b_green}Código ofuscado guardado en {b_yellow}{obfuscated_program_name}{reset}")

    except KeyboardInterrupt:
        print(f"{b_red}\nSaliendo...{reset}")

if __name__ == "__main__":
    main()
